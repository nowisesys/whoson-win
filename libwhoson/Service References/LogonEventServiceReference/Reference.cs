//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WhosOn.Library.LogonEventServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogonEvent", Namespace="http://it.bmc.uu.se/whoson")]
    [System.SerializableAttribute()]
    public partial class LogonEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HwAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkstationField;
        
        private System.DateTime StartTimeField;
        
        private System.DateTime EndTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string HwAddress {
            get {
                return this.HwAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.HwAddressField, value) != true)) {
                    this.HwAddressField = value;
                    this.RaisePropertyChanged("HwAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Hostname {
            get {
                return this.HostnameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostnameField, value) != true)) {
                    this.HostnameField = value;
                    this.RaisePropertyChanged("Hostname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Workstation {
            get {
                return this.WorkstationField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkstationField, value) != true)) {
                    this.WorkstationField = value;
                    this.RaisePropertyChanged("Workstation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogonEventMatch", Namespace="http://it.bmc.uu.se/whoson")]
    public enum LogonEventMatch : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Before = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Between = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        After = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exact = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://it.bmc.uu.se/whoson", ConfigurationName="LogonEventServiceReference.LogonEventServiceSoap")]
    public interface LogonEventServiceSoap {
        
        // CODEGEN: Generating message contract since element name user from namespace http://it.bmc.uu.se/whoson is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://it.bmc.uu.se/whoson/CreateLogonEvent", ReplyAction="*")]
        WhosOn.Library.LogonEventServiceReference.CreateLogonEventResponse CreateLogonEvent(WhosOn.Library.LogonEventServiceReference.CreateLogonEventRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://it.bmc.uu.se/whoson/CloseLogonEvent", ReplyAction="*")]
        void CloseLogonEvent(int eventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://it.bmc.uu.se/whoson/DeleteLogonEvent", ReplyAction="*")]
        void DeleteLogonEvent(int eventID);
        
        // CODEGEN: Generating message contract since element name user from namespace http://it.bmc.uu.se/whoson is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://it.bmc.uu.se/whoson/FindLogonEvent", ReplyAction="*")]
        WhosOn.Library.LogonEventServiceReference.FindLogonEventResponse FindLogonEvent(WhosOn.Library.LogonEventServiceReference.FindLogonEventRequest request);
        
        // CODEGEN: Generating message contract since element name filter from namespace http://it.bmc.uu.se/whoson is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://it.bmc.uu.se/whoson/FindLogonEvents", ReplyAction="*")]
        WhosOn.Library.LogonEventServiceReference.FindLogonEventsResponse FindLogonEvents(WhosOn.Library.LogonEventServiceReference.FindLogonEventsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateLogonEventRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateLogonEvent", Namespace="http://it.bmc.uu.se/whoson", Order=0)]
        public WhosOn.Library.LogonEventServiceReference.CreateLogonEventRequestBody Body;
        
        public CreateLogonEventRequest() {
        }
        
        public CreateLogonEventRequest(WhosOn.Library.LogonEventServiceReference.CreateLogonEventRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://it.bmc.uu.se/whoson")]
    public partial class CreateLogonEventRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string user;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string domain;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string computer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string hwaddr;
        
        public CreateLogonEventRequestBody() {
        }
        
        public CreateLogonEventRequestBody(string user, string domain, string computer, string hwaddr) {
            this.user = user;
            this.domain = domain;
            this.computer = computer;
            this.hwaddr = hwaddr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateLogonEventResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateLogonEventResponse", Namespace="http://it.bmc.uu.se/whoson", Order=0)]
        public WhosOn.Library.LogonEventServiceReference.CreateLogonEventResponseBody Body;
        
        public CreateLogonEventResponse() {
        }
        
        public CreateLogonEventResponse(WhosOn.Library.LogonEventServiceReference.CreateLogonEventResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://it.bmc.uu.se/whoson")]
    public partial class CreateLogonEventResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int CreateLogonEventResult;
        
        public CreateLogonEventResponseBody() {
        }
        
        public CreateLogonEventResponseBody(int CreateLogonEventResult) {
            this.CreateLogonEventResult = CreateLogonEventResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindLogonEventRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindLogonEvent", Namespace="http://it.bmc.uu.se/whoson", Order=0)]
        public WhosOn.Library.LogonEventServiceReference.FindLogonEventRequestBody Body;
        
        public FindLogonEventRequest() {
        }
        
        public FindLogonEventRequest(WhosOn.Library.LogonEventServiceReference.FindLogonEventRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://it.bmc.uu.se/whoson")]
    public partial class FindLogonEventRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string user;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string domain;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string computer;
        
        public FindLogonEventRequestBody() {
        }
        
        public FindLogonEventRequestBody(string user, string domain, string computer) {
            this.user = user;
            this.domain = domain;
            this.computer = computer;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindLogonEventResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindLogonEventResponse", Namespace="http://it.bmc.uu.se/whoson", Order=0)]
        public WhosOn.Library.LogonEventServiceReference.FindLogonEventResponseBody Body;
        
        public FindLogonEventResponse() {
        }
        
        public FindLogonEventResponse(WhosOn.Library.LogonEventServiceReference.FindLogonEventResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://it.bmc.uu.se/whoson")]
    public partial class FindLogonEventResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public WhosOn.Library.LogonEventServiceReference.LogonEvent FindLogonEventResult;
        
        public FindLogonEventResponseBody() {
        }
        
        public FindLogonEventResponseBody(WhosOn.Library.LogonEventServiceReference.LogonEvent FindLogonEventResult) {
            this.FindLogonEventResult = FindLogonEventResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindLogonEventsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindLogonEvents", Namespace="http://it.bmc.uu.se/whoson", Order=0)]
        public WhosOn.Library.LogonEventServiceReference.FindLogonEventsRequestBody Body;
        
        public FindLogonEventsRequest() {
        }
        
        public FindLogonEventsRequest(WhosOn.Library.LogonEventServiceReference.FindLogonEventsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://it.bmc.uu.se/whoson")]
    public partial class FindLogonEventsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public WhosOn.Library.LogonEventServiceReference.LogonEvent filter;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public WhosOn.Library.LogonEventServiceReference.LogonEventMatch match;
        
        public FindLogonEventsRequestBody() {
        }
        
        public FindLogonEventsRequestBody(WhosOn.Library.LogonEventServiceReference.LogonEvent filter, WhosOn.Library.LogonEventServiceReference.LogonEventMatch match) {
            this.filter = filter;
            this.match = match;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindLogonEventsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindLogonEventsResponse", Namespace="http://it.bmc.uu.se/whoson", Order=0)]
        public WhosOn.Library.LogonEventServiceReference.FindLogonEventsResponseBody Body;
        
        public FindLogonEventsResponse() {
        }
        
        public FindLogonEventsResponse(WhosOn.Library.LogonEventServiceReference.FindLogonEventsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://it.bmc.uu.se/whoson")]
    public partial class FindLogonEventsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public WhosOn.Library.LogonEventServiceReference.LogonEvent[] FindLogonEventsResult;
        
        public FindLogonEventsResponseBody() {
        }
        
        public FindLogonEventsResponseBody(WhosOn.Library.LogonEventServiceReference.LogonEvent[] FindLogonEventsResult) {
            this.FindLogonEventsResult = FindLogonEventsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface LogonEventServiceSoapChannel : WhosOn.Library.LogonEventServiceReference.LogonEventServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LogonEventServiceSoapClient : System.ServiceModel.ClientBase<WhosOn.Library.LogonEventServiceReference.LogonEventServiceSoap>, WhosOn.Library.LogonEventServiceReference.LogonEventServiceSoap {
        
        public LogonEventServiceSoapClient() {
        }
        
        public LogonEventServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogonEventServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogonEventServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogonEventServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WhosOn.Library.LogonEventServiceReference.CreateLogonEventResponse WhosOn.Library.LogonEventServiceReference.LogonEventServiceSoap.CreateLogonEvent(WhosOn.Library.LogonEventServiceReference.CreateLogonEventRequest request) {
            return base.Channel.CreateLogonEvent(request);
        }
        
        public int CreateLogonEvent(string user, string domain, string computer, string hwaddr) {
            WhosOn.Library.LogonEventServiceReference.CreateLogonEventRequest inValue = new WhosOn.Library.LogonEventServiceReference.CreateLogonEventRequest();
            inValue.Body = new WhosOn.Library.LogonEventServiceReference.CreateLogonEventRequestBody();
            inValue.Body.user = user;
            inValue.Body.domain = domain;
            inValue.Body.computer = computer;
            inValue.Body.hwaddr = hwaddr;
            WhosOn.Library.LogonEventServiceReference.CreateLogonEventResponse retVal = ((WhosOn.Library.LogonEventServiceReference.LogonEventServiceSoap)(this)).CreateLogonEvent(inValue);
            return retVal.Body.CreateLogonEventResult;
        }
        
        public void CloseLogonEvent(int eventID) {
            base.Channel.CloseLogonEvent(eventID);
        }
        
        public void DeleteLogonEvent(int eventID) {
            base.Channel.DeleteLogonEvent(eventID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WhosOn.Library.LogonEventServiceReference.FindLogonEventResponse WhosOn.Library.LogonEventServiceReference.LogonEventServiceSoap.FindLogonEvent(WhosOn.Library.LogonEventServiceReference.FindLogonEventRequest request) {
            return base.Channel.FindLogonEvent(request);
        }
        
        public WhosOn.Library.LogonEventServiceReference.LogonEvent FindLogonEvent(string user, string domain, string computer) {
            WhosOn.Library.LogonEventServiceReference.FindLogonEventRequest inValue = new WhosOn.Library.LogonEventServiceReference.FindLogonEventRequest();
            inValue.Body = new WhosOn.Library.LogonEventServiceReference.FindLogonEventRequestBody();
            inValue.Body.user = user;
            inValue.Body.domain = domain;
            inValue.Body.computer = computer;
            WhosOn.Library.LogonEventServiceReference.FindLogonEventResponse retVal = ((WhosOn.Library.LogonEventServiceReference.LogonEventServiceSoap)(this)).FindLogonEvent(inValue);
            return retVal.Body.FindLogonEventResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WhosOn.Library.LogonEventServiceReference.FindLogonEventsResponse WhosOn.Library.LogonEventServiceReference.LogonEventServiceSoap.FindLogonEvents(WhosOn.Library.LogonEventServiceReference.FindLogonEventsRequest request) {
            return base.Channel.FindLogonEvents(request);
        }
        
        public WhosOn.Library.LogonEventServiceReference.LogonEvent[] FindLogonEvents(WhosOn.Library.LogonEventServiceReference.LogonEvent filter, WhosOn.Library.LogonEventServiceReference.LogonEventMatch match) {
            WhosOn.Library.LogonEventServiceReference.FindLogonEventsRequest inValue = new WhosOn.Library.LogonEventServiceReference.FindLogonEventsRequest();
            inValue.Body = new WhosOn.Library.LogonEventServiceReference.FindLogonEventsRequestBody();
            inValue.Body.filter = filter;
            inValue.Body.match = match;
            WhosOn.Library.LogonEventServiceReference.FindLogonEventsResponse retVal = ((WhosOn.Library.LogonEventServiceReference.LogonEventServiceSoap)(this)).FindLogonEvents(inValue);
            return retVal.Body.FindLogonEventsResult;
        }
    }
}
